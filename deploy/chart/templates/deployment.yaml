apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
      containers:
        - name: api
          image: {{ .Values.image }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
{{- if .Values.affinity }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{- end }}
          envFrom:
           - configMapRef:
               name: {{ .Release.Name }}-config
           - secretRef:
               name: {{ .Release.Name }}-secrets
{{- if eq .Values.mysql.external false }}
        - name: mysql
          image: {{ .Values.mysql.image }}
          args:
            - "--ignore-db-dir=lost+found"
          ports:
            - name: mysql
              containerPort: 3306
              protocol: TCP
{{- if .Values.affinity }}
          resources:
{{ toYaml .Values.mysql.resources | indent 12 }}
{{- end }}
          envFrom:
            - secretRef:
                name: {{ .Release.Name }}-secrets
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-claim
{{- end }}

